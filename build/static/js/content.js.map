{"version":3,"file":"static/js/content.js","mappings":"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","sources":["content/content.js"],"sourcesContent":["const query = {\n  number: \".present-single-question__head fieldset legend\",\n  question: \".present-single-question__head fieldset div\",\n  group: \".present-single-question__body .mdc-form-field\",\n  image: \".present-single-question__head fieldset img\",\n  btns: \"button\",\n  label: \"Câu hỏi tiếp theo\",\n  avatar: \".user-avatar\",\n};\nconst style = \"font-size: 20px; color:#39C134; font-family: Inter\";\nlet [finalAnswer, groupAnswer, groupImgs, test] = [[], [], [], []];\nconst [question, select, cachedImgs] = [{}, new Set(), []];\nconst url = \"https://api.luusytruong.id.vn/lms/temp.php\";\nconst label = [\"A. \", \"B. \", \"C. \", \"D. \"];\n\nconsole.clear();\n\nfunction normal(str) {\n  return str.normalize(\"NFKC\").replace(/\\s+/g, \" \").trim();\n}\n\nfunction standard(str) {\n  return str.normalize(\"NFKC\").trim();\n}\n\nasync function handleUpload(blobUrl) {\n  const fileName = blobUrl.split(\"/\").pop();\n  const existFile = cachedImgs.find((img) => img.name === fileName);\n  if (existFile) return existFile.src;\n\n  try {\n    const responseBlob = await fetch(blobUrl);\n    if (!responseBlob.ok) throw new Error(\"Mất kết nối\");\n    const blob = await responseBlob.blob();\n    const formData = new FormData();\n    formData.append(\"blob\", blob);\n\n    const response = await fetch(url, {\n      method: \"POST\",\n      body: formData,\n    });\n    if (!response.ok) throw new Error(\"Mất kết nối\");\n    const result = await response.json();\n    if (result.src) {\n      cachedImgs.push({ name: fileName, src: result.src });\n      console.log(\"thành công\");\n      return result.src;\n    }\n    throw new Error(`Lỗi: ${result}`);\n  } catch (e) {\n    console.error(e);\n    return { error: true };\n  }\n}\n\nfunction handleChange(e) {\n  const elem = e.target;\n  const i = parseInt(elem.dataset.index, 10);\n  if (elem?.type === \"radio\") {\n    select.clear();\n    select.add(i);\n  } else {\n    elem?.checked ? select.add(i) : select.delete(i);\n  }\n  handleBuild();\n}\n\nasync function handleSelect(auto) {\n  if (!auto) return;\n  const data = await handleGet(\"auto\");\n  const autoData = new Set(data);\n  const groups = document.querySelectorAll(query.group);\n  const questionElem = document.querySelector(query.question);\n  const numberElem = document.querySelector(query.number);\n  const imgElem = document.querySelector(query.image);\n\n  select.clear();\n  [finalAnswer, groupAnswer, groupImgs] = [[], [], []];\n  question.img_src = \"\";\n\n  if (questionElem) {\n    question.text = standard(questionElem.innerText);\n  }\n  if (numberElem) {\n    question.no = parseInt(numberElem.innerText.replace(/\\D/g, \"\"));\n  }\n  if (imgElem) {\n    await new Promise((resolve) => {\n      const interval = setInterval(async () => {\n        if (!imgElem.src.includes(\"blob\")) return;\n        clearInterval(interval);\n        question.img_src = await handleUpload(imgElem.src);\n        resolve();\n      }, 10);\n    });\n  }\n\n  for (let i = 0; i < groups.length; i++) {\n    const input = groups[i].querySelector(\"input\");\n    const label = groups[i].querySelector(\"label\");\n    const image = groups[i].querySelector(\"img\");\n\n    if (input) {\n      input.dataset.index = i;\n      input.removeEventListener(\"click\", handleChange);\n      input.addEventListener(\"click\", handleChange);\n    }\n    if (label && label.innerText !== \"\") {\n      const ans = normal(label.innerText);\n      const key = normal(question.text + \" \" + ans).toLowerCase();\n      groupAnswer[i] = ans;\n      if (auto && autoData.has(key)) {\n        const interval = setInterval(() => {\n          if (groupAnswer.length < groups.length) return;\n          clearInterval(interval);\n          label.classList.add(\"selected-hehe\");\n          label.click();\n        }, 10);\n      }\n    } else if (image) {\n      const src = await handleUpload(image.src);\n      groupImgs[i] = { type: \"img\", src: src };\n    }\n  }\n\n  console.log(\"%c🟩 Tải câu hỏi\", style);\n}\n\nasync function handleBuild() {\n  for (let i = 0; i < groupAnswer.length; i++) {\n    const value = groupAnswer[i] ?? groupImgs[i];\n    if (value) {\n      finalAnswer[i] = (select.has(i) ? `*${label[i]}` : label[i]) + value;\n    }\n  }\n  test[question.no - 1] = {\n    ...question,\n    options: finalAnswer,\n    select: Array.from(select),\n  };\n  await handleSet(\"test\", test);\n}\n\nasync function handleSet(key, data) {\n  try {\n    if (typeof chrome !== \"undefined\" && chrome.storage) {\n      chrome.storage.local.set({ [key]: data }, () => {\n        console.log(`Lưu thành công với key: ${key}`);\n      });\n    } else {\n      console.error(\"Lỗi: không phải môi trường extension\");\n    }\n  } catch (e) {\n    console.error(\"handle save: \" + e.message);\n  }\n}\n\nasync function handleGet(key) {\n  if (typeof chrome === \"undefined\" && !chrome.storage) {\n    console.error(\"Lỗi: không phải môi trường extension\");\n    return;\n  }\n  return new Promise((resolve, reject) => {\n    try {\n      chrome.storage.local.get([key], (result) => {\n        if (result[key]) {\n          console.log(`Lấy thành công với key: ${key}`);\n          resolve(result[key]);\n        } else {\n          console.log(`Lấy thất bại với key: ${key}`);\n          resolve([]);\n        }\n      });\n    } catch (e) {\n      console.error(\"handle Get: \" + e.message);\n      reject(e);\n    }\n  });\n}\n\nasync function handleToggle() {\n  const setting = await handleGet(\"settings\");\n  const versionLabel = document.querySelector(\".app-version\");\n\n  if (!setting?.toggle) return;\n  if (versionLabel) {\n    versionLabel.addEventListener(\"click\", () => {\n      handleSelect(setting?.auto);\n    });\n  }\n  handleAddEvent(setting?.auto);\n}\n\nfunction handleAddEvent(auto) {\n  const handleClick = () => {\n    if (handleClick.debouncing) return;\n    handleClick.debouncing = true;\n    setTimeout(() => {\n      handleSelect(auto);\n      handleClick.debouncing = false;\n    }, 100);\n  };\n\n  setInterval(() => {\n    const btns = Array.from(document.querySelectorAll(query.btns));\n    const btn = btns.find(\n      (btn) => btn.label === query.label || btn.innerText.trim() === query.label\n    );\n\n    if (btn && !btn.dataset.event) {\n      btn.dataset.event = true;\n      console.log(\"%c🟩 Đã thấy nút\", style);\n      btn.addEventListener(\"click\", handleClick);\n      handleSelect(auto);\n    }\n  }, 1000);\n}\n\nconst href = window.location.href;\nif (href.includes(\"lms.ictu.edu.vn\") || href.startsWith(\"file\")) {\n  handleToggle();\n  window.addEventListener(\n    \"contextmenu\",\n    function (e) {\n      e.stopPropagation();\n    },\n    true\n  );\n}\n"],"names":["query","style","finalAnswer","groupAnswer","groupImgs","test","question","select","cachedImgs","Set","label","normal","str","normalize","replace","trim","async","handleUpload","blobUrl","fileName","split","pop","existFile","find","img","name","src","responseBlob","fetch","ok","Error","blob","formData","FormData","append","response","method","body","result","json","push","console","log","e","error","handleChange","elem","target","i","parseInt","dataset","index","type","clear","add","checked","delete","length","_groupAnswer$i","value","has","no","options","Array","from","key","data","chrome","storage","local","set","message","handleSet","handleBuild","handleSelect","auto","handleGet","autoData","groups","document","querySelectorAll","questionElem","querySelector","numberElem","imgElem","img_src","text","innerText","Promise","resolve","interval","setInterval","includes","clearInterval","input","image","removeEventListener","addEventListener","ans","toLowerCase","classList","click","reject","get","href","window","location","startsWith","setting","versionLabel","toggle","handleClick","debouncing","setTimeout","btn","event","handleAddEvent","handleToggle","stopPropagation"],"sourceRoot":""}